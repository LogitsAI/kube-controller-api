syntax = "proto3";

option go_package = "github.com/LogitsAI/kube-controller-api/controllerpb";

package kube_controller_api;

import "google/protobuf/duration.proto";

import "kube_controller_api/controller.proto";

message ReconcileResult {
    // Error is the error message, if any.
    // If the error is unset, the processing is assumed to be successful.
    optional string error = 1;

    // Requeue indicates that the object should be immediately requeued.
    // The default is false.
    bool requeue = 2;

    // RequeueAfter indicates that the object should be requeued after the
    // given delay, if set to a value greater than 0.
    google.protobuf.Duration requeue_after = 3;

    // Status is the new value to set for the status subresource, if specified.
    // It should be the JSON-encoded value of the `.status` field.
    optional bytes status = 4;

    // Children is the set of child objects to maintain.
    //
    // The reconciler must always send back a complete list of all desired
    // child objects. Any observed child objects that are not listed here will
    // be deleted.
    repeated DesiredChildObjects children = 5;
}

message WorkQueue {
    // ControllerName is the name of the controller.
    string controller_name = 1;
}

message DesiredChildObjects {
    GroupVersionKind group_version_kind = 1;
    
    // ApplyConfigs are the JSON-encoded object configs to create or update
    // by sending them to the Kubernetes API via Server-Side Apply.
    // Similar to a file written for use with `kubectl apply`, you should only
    // include fields that you wish to set.
    //
    // The map key should be a string that uniquely identifies each child object
    // within a given parent. This will be used to automatically generate a name
    // for the actual Kubernetes object that's unique across different parents.
    //
    // Note that it is NOT safe to send back a full observed object as an apply
    // config because it would contain many fields that your controller isn't
    // trying to set.
    map<string, bytes> apply_configs = 2;
}

message ObservedChildObjects {
    GroupVersionKind group_version_kind = 1;

    // ObservedObjects is a map of JSON-encoded objects of the given GroupVersionKind
    // that belong to the parent object, as last returned by the Kubernetes API.
    //
    // The map key will match the value used in DesiredChildObjects when the
    // object was created.
    map<string, bytes> observed_objects = 2;
}
